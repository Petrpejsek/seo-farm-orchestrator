# üõ°Ô∏è SYSTEMD SERVICE TEMPLATE PRO TEMPORAL WORKER
# =================================================
# Template pro systemd service Temporal workera
# NEAKTIVOVAT ZAT√çM - konflikt s flock mechanismem!
#
# INSTALACE (a≈æ bude pot≈ôeba):
# 1. Zkop√≠ruj do /etc/systemd/system/temporal-worker.service
# 2. Uprav cesty podle prost≈ôed√≠
# 3. systemctl daemon-reload
# 4. systemctl enable temporal-worker.service
# 5. systemctl start temporal-worker.service
#
# ‚ö†Ô∏è  POZOR: Tato slu≈æba pou≈æ√≠v√° master_worker_manager.sh
# ‚ö†Ô∏è  UJISTI SE, ≈æe ≈æ√°dn√Ω jin√Ω proces nespou≈°t√≠ worker!

[Unit]
Description=Temporal Worker for SEO Farm Orchestrator
Documentation=https://temporal.io/
After=network.target
Wants=network-online.target

# üîó Z√ÅVISLOSTI (voliteln√©)
# After=temporal-server.service
# Requires=postgresql.service

[Service]
Type=forking
User=worker
Group=worker

# üìÇ CESTY (UPRAVIT PODLE PROST≈òED√ç!)
WorkingDirectory=/opt/seo-farm
ExecStart=/opt/seo-farm/master_worker_manager_production.sh start
ExecStop=/opt/seo-farm/master_worker_manager_production.sh stop
ExecReload=/opt/seo-farm/master_worker_manager_production.sh restart

# üìÅ PID soubor (automatic based on environment)
PIDFile=/var/run/seo-farm/worker.pid

# üåç ENVIRONMENT VARIABLES
Environment=API_BASE_URL=http://localhost:8000
Environment=TEMPORAL_HOST=localhost:7233
Environment=TEMPORAL_NAMESPACE=default

# üõ°Ô∏è SECURITY & RESTART POLICY
Restart=always
RestartSec=10
StartLimitInterval=60
StartLimitBurst=3

# Graceful shutdown timeout
TimeoutStopSec=30

# Resource limits (voliteln√©)
LimitNOFILE=65536
LimitNPROC=4096

# üîí SECURITY SANDBOXING (doporuƒçen√© pro produkci)
NoNewPrivileges=true
PrivateTmp=true
ProtectSystem=strict
ProtectHome=true
ReadWritePaths=/opt/seo-farm-orchestrator

# Logging
StandardOutput=journal
StandardError=journal
SyslogIdentifier=temporal-worker

[Install]
WantedBy=multi-user.target

# üìã USAGE EXAMPLES:
# 
# systemctl status temporal-worker     # Zobraz√≠ stav
# systemctl start temporal-worker      # Spust√≠ service
# systemctl stop temporal-worker       # Zastav√≠ service  
# systemctl restart temporal-worker    # Restartuje service
# systemctl enable temporal-worker     # Auto-start p≈ôi bootu
# systemctl disable temporal-worker    # Zak√°≈æe auto-start
# 
# journalctl -u temporal-worker -f     # Live logs
# journalctl -u temporal-worker --since "1 hour ago"  # Logs za posledn√≠ hodinu
#
# ‚ö†Ô∏è  D≈ÆLE≈ΩIT√â POZN√ÅMKY:
# 
# 1. Tato service pou≈æ√≠v√° Type=forking, proto≈æe master_worker_manager.sh
#    spou≈°t√≠ python process na pozad√≠ a ulo≈æ√≠ PID
# 
# 2. Service se pokus√≠ o restart p≈ôi selh√°n√≠, ale respektuje flock lock
#    z master_worker_manager.sh
# 
# 3. Pro produkƒçn√≠ nasazen√≠ doporuƒç vytvo≈ôit dedicated√©ho u≈æivatele 'worker'
#    a upravit security nastaven√≠
# 
# 4. Environment variables lze p≈ôepsat v systemd override:
#    systemctl edit temporal-worker
# 
# 5. P≈ôed aktivac√≠ ovƒõ≈ô, ≈æe master_worker_manager.sh funguje manu√°lnƒõ!